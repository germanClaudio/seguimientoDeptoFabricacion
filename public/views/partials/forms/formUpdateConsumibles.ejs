<div class="form-group col-12 mx-auto mt-2 mb-5 w-75 border px-5 py-1 text-white bg-opacity-75" style="background-color: #9a9a9abb;">
    <form id="formUpdateConsumibles" enctype="multipart/form-data" action="/api/consumibles/update/<%=consumible._id%>" method="post">
        <fieldset>
            <div class="row justify-content-between align-items-center mt-2">
                <div class="col-3 mx-auto my-2">
                    <label for="idDisable">Id#</label>
                    <input type="text" name="idDisable" id="idDisable" class="form-control-plaintext text-white" value="<%=consumible._id%>" disabled>
                </div>
                
                <div class="col mx-auto my-1">
                    <label for="idCreator">Creado por</label>
                    <input type="text" name="idCreator" id="idCreator" class="form-control-plaintext text-white small"
                        value="<%=consumible.creator[0].name%> <%=consumible.creator[0].lastName%>" disabled>
                </div>
                
                <div class="col mx-auto my-1">
                    <label for="timestampDisable">Fecha creación</label>
                    <% const offset = -3 * 60 * 60 * 1000;
                        let utcDate = new Date(consumible.timestamp),
                        utcDateModified = new Date(consumible.modifiedOn),
                        localDate = new Date(utcDate.getTime() + offset),
                        localDateModified = new Date(utcDateModified.getTime() + offset),
                        formattedDate = localDate.toISOString().replace('T', ' ').split('.')[0],
                        formattedDateModified = localDateModified.toISOString().replace('T', ' ').split('.')[0];
        
                        formattedDate === formattedDateModified ? formattedDateModified = '' : null
                    %>
                    <input type="text" name="timestampDisable" id="timestampDisable" class="form-control-plaintext text-white small"
                        value="<%=formattedDate%>" disabled>
                </div>
                
                <div class="col mx-auto my-1">
                    <label for="modificatorDisable">Modificado por</label>
                    <% if (consumible.modificator[0].name !== "") { %>
                        <input type="text" name="modificatorDisable" id="modificatorDisable" class="form-control-plaintext text-white small"
                            value="<%=consumible.modificator[0].name%> <%=consumible.modificator[0].lastName%>" disabled>
                    <% } else { %>
                        <input type="text" name="modificatorDisable" id="modificatorDisable" class="form-control-plaintext text-white small"
                            value="" disabled>
                    <% } %>        
                </div>
                
                <div class="col-auto mx-auto my-1">
                    <label for="modifiedOnDisable">Fecha modificación</label>
                    <input type="text" name="modifiedOnDisable" id="modifiedOnDisable" class="form-control-plaintext text-white small"
                        value="<%=formattedDateModified%>" disabled>
                </div>
            </div>
            <hr class="border my-1">
            <!-- Designacion Características status -->
            <div class="row justify-content-between align-items-start my-2">
                <div class="col mx-auto">
                    <label class="form-label" for="designation">Designación</label>
                    <input type="text" name="designation" id="designation" class="form-control" value="<%=consumible.designation %>"
                        autocomplete="on" placeholder="Designación consumible" required>
                </div>
                
                <div class="col-3 mx-auto">
                    <label class="form-check-label" for="type">Tipo</label>
                    <select class="form-select form-select" aria-label=".form-select" name="type" id="type" required>
                        <%
                        const opcionesUpdate = [
                            { value: "epp", text: "EPP" },
                            { value: "ropa", text: "Ropa" },
                            { value: "consumiblesAjuste", text: "Consum. Ajuste" },
                            { value: "consumiblesMeca", text: "Consum. Mecanizado" },
                            { value: "consumiblesLineas", text: "Consum. Líneas" },
                            { value: "otros", text: "Otros" }
                        ];
                        opcionesUpdate.forEach(opcion => { %>
                            <option value="<%= opcion.value %>" <%= opcion.value == consumible.type ? 'selected' : '' %> > <%= opcion.text %> </option>
                        <% }) %>
                    </select>
                </div>

                <% let checkOn = ''
                    if (consumible.status) {
                        checkOn = 'checked' %>
                        <div class="col-3 mx-auto" style="background-color: #55dd5560;">
                    <% } else { %>
                        <div class="col-3 mx-auto" style="background-color: #ff00006f;">
                    <% } %>
                            <label for="status">Status Consumible</label>
                            <div class="">
                                <label class="form-check-label" for="status">Inactivo</label>
                                <div class="form-check form-switch d-inline-block mt-2">
                                    <input id="status" class="form-check-input" type="checkbox" role="switch"
                                        name="status" style="cursor: pointer;" <%= checkOn %> >
                                    <label class="form-check-label" for="status">Activo</label>
                                </div>    
                            </div>
                        </div>
            </div>
            
            <!-- codigo tipo -->
            <div class="row justify-content-between align-items-start my-3">
                <div class="col-2 mx-auto">
                    <label class="form-label" for="code">Código</label>
                    <input type="text" name="code" id="code" class="form-control" value="<%=consumible.code%>" placeholder="Código" required>
                </div>

                <div class="col-6 mx-auto">
                    <label for="characteristics">Características</label>
                    <textarea type="text" name="characteristics" id="characteristics" class="form-control" rows="3"><%=consumible.characteristics%></textarea>
                </div>

                <div class="col mx-auto">
                    <div class="range-container-favorite">
                        <label class="label-left" for="favorite">Menos Solicitado</label>
                        <label class="label-right" for="favorite">Más Solicitado</label>
                        <input type="range" class="form-range-favorite custom-range-favorite" min="0" max="5" step="1" value="<%= consumible.favorito %>" id="favorite">
                        <div class="scale">
                            <span>0</span>
                            <span>1</span>
                            <span>2</span>
                            <span>3</span>
                            <span>4</span>
                            <span>5</span>
                        </div>
                    </div>
                </div>
                
                <% function calculateStockTotal(stockMap) {
                    let total = 0, llaves = stockMap.size, keysSonNumeros = true, keysSonLetras = true, valores = [];
                    for (const value of stockMap.values()) {
                        total += value;
                        valores.push(value)
                    }
                    for (const key of stockMap.keys()) {
                        if (isNaN(Number(key))) {
                            keysSonNumeros = false;
                        }
                        if (!/^[a-zA-Z]$/.test(key)) {
                            keysSonLetras = false;
                        }
                    }
                
                    return {
                        total,
                        llaves,
                        valores,
                        keysSonNumeros,
                        keysSonLetras
                    };
                }
                let stockTotal = calculateStockTotal(consumible.stock);

                if (stockTotal.total === 0) { %>
                    <div class="col-2 mx-auto"  style="background-color: #ff00006f;">
                <% } else { %>
                    <div class="col-2 mx-auto"  style="background-color: #55dd5560;">
                <% } %>
                    <label class="form-label" for="stock">Stock Total</label>
                    <% if (stockTotal.llaves === 1) { %>
                        <input type="number" name="stock" id="stock" min="0" max="10000" class="form-control mb-3 me-2" value="<%=stockTotal.total%>">
                    <% } else { %>
                        <input type="number" name="stock" id="stock" min="0" max="10000" class="form-control mb-3 me-2" value="<%=stockTotal.total%>" disabled>
                    <% } %>
                </div>
            </div>

            <div class="row justify-content-between align-items-start my-2">
                <!-- Sección de Talle, Número o Único (Radio Buttons) -->
                <div class="accordion my-4 mx-2" id="accordionTalle">
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingOne">
                            <% let buttonCollapsed = '', expanded = false, show = '';
                            stockTotal.llaves != 1 ? ( buttonCollapsed = 'collapsed', expanded = true, show = 'show' ) : null %>
                            <button class="accordion-button bg-light <%= buttonCollapsed %>" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="<%= expanded %>" aria-controls="collapseOne">
                                Tipo de Stock (Único / Talle / Número)
                            </button>
                        </h2>
                        <div id="collapseOne" class="accordion-collapse collapse <%= show %>" aria-labelledby="headingOne" data-bs-parent="#accordionTalle" style="background-color: #b6b6b6;">
                            <div class="accordion-body">
                            
                                <div class="row my-1 mx-auto">
                                    <div class="vr mx-1 d-none d-xl-inline" id="vrBlack" style="color: rgba(0, 0, 0, 0.4);"></div>
                    
                                    <div id="colsUnico" class="col-1 me-2 my-auto">
                                        <% let unicoCheck = '', talleCheck = '', numeroCheck = ''  
                                        stockTotal.keysSonLetras
                                        ? talleCheck = 'checked'
                                        : stockTotal.llaves === 1 ? unicoCheck = 'checked' : numeroCheck = 'checked'
                                        %>
                                        <div class="form-check my-3">
                                            <input class="form-check-input" type="radio" name="tipoTalle" id="unico" value="unico" <%= unicoCheck %> onchange="handleTipoTalleChange('unico')">
                                            <label class="form-check-label" for="unico">Único</label>
                                        </div>
                                        <div class="form-check my-3">
                                            <input class="form-check-input" type="radio" name="tipoTalle" id="talle" value="talle" <%= talleCheck %> onchange="handleTipoTalleChange('talle')">
                                            <label class="form-check-label" for="talle">Talle</label>
                                        </div>
                                        <div class="form-check my-3">
                                            <input class="form-check-input" type="radio" name="tipoTalle" id="numero" value="numero" <%= numeroCheck %> onchange="handleTipoTalleChange('numero')">
                                            <label class="form-check-label" for="numero">Número</label>
                                        </div>
                                    </div>
                                    
                                    <div class="vr mx-1 d-none d-xl-inline" id="vrRed" style="color: rgba(195, 0, 0, 0.4);"></div>

                                <!-- Sección de Talles (Checkboxes) -->
                                    <div id="colsTalle" class="col-4 text-center my-auto">
                                        <div class="d-flex flex-wrap justify-content-around gap-3">
                                            <!-- Talles S a XXL -->
                                            <% let arrayLetras = ['a','b','c','d','e','f','g','h','i','j'], 
                                                talleDisabled = talleCheck !== 'checked' ? 'disabled' : '';

                                                const letterMapping = {
                                                    'a': 'XS',
                                                    'b': 'S',
                                                    'c': 'M',
                                                    'd': 'L',
                                                    'e': 'XL',
                                                    'f': '2XL',
                                                    'g': '3XL',
                                                    'h': '4XL',
                                                    'i': '5XL',
                                                    'j': '6XL'
                                                };
                                            
                                            function individualsStock(valorIndividual) {
                                                let letraCheck = valorIndividual !== 0 ? 'checked' : '',
                                                    letraIndividualDisabled = valorIndividual !== 0 ? '' : 'disabled',
                                                    valor = talleDisabled !== 'disabled' ? valorIndividual : 0;
                                                return { valor, letraCheck, letraIndividualDisabled };
                                            }
                                            
                                            for (let i = 0; arrayLetras.length > i; i++) {
                                                let stockLetraInfo = individualsStock(stockTotal.valores.length === 10 ? stockTotal.valores[i] : 0 ),
                                                    letter = arrayLetras[i],
                                                    letterCapital = arrayLetras[i].toUpperCase(), 
                                                    letterCapitalTitle = letterMapping[letter]; %> 

                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" id="<%= letter %>" onchange="toggleStockInput('<%= letter %>')"
                                                        <%= talleDisabled %> <%= stockLetraInfo.letraCheck %> >
                                                    <label class="form-check-label" for="<%= letter %>"><%= letterCapitalTitle %></label>
                                                    <input type="number" name="stock<%= letterCapital %>" id="stock<%= letterCapital %>" min="0" max="1000" class="form-control stock-input"
                                                        value="<%= stockLetraInfo.valor %>"
                                                        <%= stockLetraInfo.letraIndividualDisabled %> style="width: 75px;">
                                                </div>
                                            <% } %>

                                        </div>
                                    </div>
                                
                                    <div class="vr mx-1 d-none d-xl-inline" id="vrBlue" style="color: rgba(0, 13, 195, 0.4);"></div>
                        
                                    <!-- Sección de Números (Checkboxes) -->
                                    <div id="colsNumeros" class="col text-center my-auto">
                                        <div class="d-flex flex-wrap justify-content-around gap-3">
                                            <!-- Números del 35 al 49 -->
                                            <% let numeroDisabled = numeroCheck !== 'checked' ? 'disabled' : '';

                                            function individualsStockNumber(valorIndividual) {
                                                let numeroCheck = valorIndividual !== 0 ? 'checked' : '',
                                                    numeroIndividualDisabled = valorIndividual !== 0 ? '' : 'disabled',
                                                    valor = numeroDisabled !== 'disabled' ? valorIndividual : 0;
                                                return { valor, numeroCheck, numeroIndividualDisabled };
                                            }

                                            for (let i = 35; i <= 65; i++) {
                                                let stockInfo = individualsStockNumber(stockTotal.valores.length != 10 ? stockTotal.valores[i - 35] : 0); %> 
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" id="num<%=i%>" onchange="toggleStockInput('num<%=i%>')"
                                                        <%= numeroDisabled %> <%= stockInfo.numeroCheck %>>
                                                    <label class="form-check-label" for="num<%=i%>"><%=i%></label>
                                                    <input type="number" name="stockNum<%=i%>" id="stockNum<%=i%>" min="0" max="100" class="form-control stock-input"
                                                        value="<%= stockInfo.valor %>"
                                                        <%= stockInfo.numeroCheck %> <%= stockInfo.numeroIndividualDisabled %> style="width: 75px;">
                                                </div>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
    
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Imagen nueva - actual - QR -->
            <div class="row justify-content-between align-items-start my-2">
                <!-- Imagen nueva -->
                <div class="col-5">
                    <label for="fileInputImageConsumibles" class="form-label">
                        Seleccione una nueva imagen del Consumible o EPP
                    </label>
                    <input type="text" id="fileInputTextImageConsumiblesUpdate" name="imageTextImageConsumibles" value="<%=consumible.imageConsumibles %>" style="display: none;">
                    <input type="file" id="fileInputConsumiblesUpdate" name="imageImageConsumibles" value="" accept="image/*" style="display: none;">
                    <div id="drop-areaConsumiblesUpdate" class="my-1 mx-auto">
                        <p>Haz click o arrastra y suelta una imagen aquí</p>
                    </div>
                    <button title="Eliminar Imagen"
                        type="button" class="btn btn-danger rounded-circle mx-auto" id="removeImageConsumiblesUpdate" style="display: none;">
                        <i class="fa-solid fa-xmark"></i>
                    </button>
                    
                    <div id="alertImageConsumiblesUpdate" class="alert alert-warning align-items-center mx-auto" role="alert"
                        style="display: none; font-size: 0.85rem; height: 1.15rem; width: 26rem;">
                        <strong class="me-2">Error!</strong> Solo puedes ingresar una imagen jpg, png, bmp o jpeg.
                    </div>
                    <div id="alertSizeImageConsumiblesUpdate" class="alert alert-warning align-items-center mx-auto" role="alert"
                        style="display: none; font-size: 0.85rem; height: 1.15rem; width: 25rem;">
                        <strong class="me-2">Atención!</strong> El tamaño de la imagen debe ser menor a 3Mb.
                    </div>
                </div>    
                <!-- Imagen actual -->    
                <div class="col mb-auto">
                    <label for="fileInputConsumiblesUpdate">Imagen consumible actual</label>
                    <div class="container-fluid my-1 p-1 text-center">
                        <img id="fileInputConsumiblesUpdate" src="<%=consumible.imageConsumible%>" class="my-1 img-thumbnail rounded mx-auto" alt="Imagen consumible" width="200px" height="200px">
                    </div>
                </div>
                <!-- Imagen QR -->
                <div class="col">
                    <label id="qrLabel" for="qrInputImageConsumibles" class="form-label">QR (autogenerado)</label>
                    <div id="loaderUpdate" class="loader"></div>
                    <div id="qrConsumibleUpdate" class="my-1 mx-auto text-center">
                        <img id="qrImageUpdated" src="<%=consumible.qrCode%>" class="img-thumbnail rounded my-1 mx-auto text-center" alt="QR code" width="200px" height="200px">
                    </div>
                    <input id="qrConsumibleInput" type="hidden" value="<%=consumible.qrCode%>" name="qrConsumibleInput" style="display: none;">
                    <button id="downloadQR" class="btn btn-success mt-3 mx-auto">Descargar <i class="fa-solid fa-qrcode"></i></button>
                </div>
            </div>
            <hr class="border my-1">
            <!-- botones -->
            <div class="row justify-content-between align-items-center my-2">
                <div class="col">
                    <% if( userInfo.admin || userInfo.area === "fabricación" ) { %>        
                        <div class="d-flex justify-content-center m-2">
                            <a class="btn btn-primary mx-auto my-2 shadow" href="/api/consumibles">Volver <i class="fa-solid fa-arrow-left"></i></a>
                            <button id="btnUpdateConsumibles" class="btn btn-success mx-auto my-2 shadow" disabled>Actualizar <i class="fa-solid fa-save"></i></button>
                        </div>
                    <% } else { %>
                        <div class="d-flex justify-content-center m-2">
                            <a class="btn btn-primary mx-auto my-2 shadow" href="/api/consumibles">Volver <i class="fa-solid fa-arrow-left"></i></a>
                            <button id="btnUpdateConsumibles" class="btn btn-success mx-auto my-2 shadow disabled" disabled>Actualizar <i class="fa-solid fa-ban"></i></button>
                        </div>
                    <% } %>
                </div>
            </div>
            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        </fieldset>
    </form>
</div>